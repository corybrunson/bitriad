% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wedges-flavors.R, R/wedges.R
\name{indequ_wedges}
\alias{indequ_wedges}
\alias{indequ.wedges}
\alias{indstr_wedges}
\alias{indstr.wedges}
\alias{injact_wedges}
\alias{injact.wedges}
\alias{injequ_wedges}
\alias{injequ.wedges}
\alias{injstr_wedges}
\alias{injstr.wedges}
\alias{wedges}
\alias{wedges_an}
\alias{wedges_watts_strogatz}
\alias{wedges_classical}
\alias{wedges_projection}
\alias{wedges_opsahl}
\alias{wedges_twomode}
\alias{wedges_liebig_rao_0}
\alias{wedges_unconnected}
\alias{wedges_liebig_rao_3}
\alias{wedges_completely_connected}
\alias{wedges_exclusive}
\title{Affiliation network wedges}
\usage{
indequ_wedges(graph, Q)

indequ.wedges(graph, Q)

indstr_wedges(graph, Q)

indstr.wedges(graph, Q)

injact_wedges(graph, Q)

injact.wedges(graph, Q)

injequ_wedges(graph, Q)

injequ.wedges(graph, Q)

injstr_wedges(graph, Q)

injstr.wedges(graph, Q)

wedges(graph, actor, alcove = 0, wedge = 0, maps = 0, congruence = 0)

wedges_an(graph, actor, alcove = 0, wedge = 0, maps = 0, congruence = 0)

wedges_watts_strogatz(graph, actor)

wedges_classical(graph, actor)

wedges_projection(graph, actor)

wedges_opsahl(graph, actor)

wedges_twomode(graph, actor)

wedges_liebig_rao_0(graph, actor)

wedges_unconnected(graph, actor)

wedges_liebig_rao_3(graph, actor)

wedges_completely_connected(graph, actor)

wedges_exclusive(graph, actor)
}
\arguments{
\item{graph}{An affiliation network.}

\item{Q}{An actor node in the network.}

\item{actor}{An actor node in \code{graph}.}

\item{alcove, wedge, maps, congruence}{Choice of alcove, wedge, maps, and 
congruence (see Details).}
}
\value{
A two-element list consisting of (1) a 3- or 5-row integer matrix of 
  (representatives of) all (congruence classes of) wedges in \code{graph} 
  centered at \code{actor}, and (2) a logical vector indicating whether each 
  wedge is closed.
}
\description{
Each clustering coefficient can be defined as the proportion of "wedges" that
are "closed", for suitable definitions of both terms. These functions count
the "wedges", and among them the "closed" ones, centered at a given actor
node in a given affiliation network.

Given an affiliation network and an actor node ID, identify all 
  wedges for a specified measure centered at the node and indicate whether 
  each is closed.
}
\details{
The \code{wedges_*} functions implement wedge censuses underlying 
  the several measures of triad closure described below. Each function 
  returns a transversal of wedges from the congruence classes of wedges 
  centered at the index actor and indicators of whether each class is closed.
  The shell function \code{wedges} determines a unique measure from several 
  coded arguments (see below) and passes the input affiliation network to 
  that measure.


}
\section{Measures of triad closure}{
 Each measure of triad closure is defined 
  as the proportion of wedges that are closed, where a \emph{wedge} is the 
  image of a specified two-event triad \eqn{W} under a specified subcategory 
  of graph maps \eqn{C} subject to a specified congruence relation \eqn{~}, 
  and where a wedge is \emph{closed} if it is the image of such a map that 
  factors through a canonical inclusion of \eqn{W} to a specified self-dual 
  three-event triad \eqn{X}.
  
The alcove, wedge, maps, and congruence can be specified by numerical codes
as follows (no plans exist to implement more measures than these):
\itemize{
 \item{\code{alcove}:
  \itemize{
   \item{\code{0}: \eqn{T_{(1,1,1),0}}}
   \item{\code{1}: \eqn{T_{(1,1,0),1}}} (\strong{not yet implemented})
   \item{\code{2}: \eqn{T_{(1,0,0),2}}} (\strong{not yet implemented})
   \item{\code{3}: \eqn{T_{(0,0,0),3}}} (\strong{not yet implemented})
  }
 }
 \item{\code{wedge}:
  \itemize{
   \item{\code{0}: \eqn{T_{(1,1,0),0}}}
   \item{\code{1}: \eqn{T_{(1,0,0),1}}} (\strong{not yet implemented})
   \item{\code{2}: \eqn{T_{(0,0,0),2}}} (\strong{not yet implemented})
  }
 }
 \item{\code{maps}:
  \itemize{
   \item{\code{0}: all graph maps (injective on actors)}
   \item{\code{1}: injective graph maps}
   \item{\code{2}: induced injective graph maps}
  }
 }
 \item{\code{congruence}:
  \itemize{
   \item{\code{0}: same actor and event images (equivalence)}
   \item{\code{1}: same actor images, structurally equivalent event images}
   \item{\code{2}: same actor images}
  }
 }
}
Some specifications correspond to statistics of especial interest:
\itemize{
 \item{\code{0,0,0,2}:
  the classical clustering coefficient (Watts & Strogatz, 1998),
  evaluated on the unipartite actor projection
 }
 \item{\code{0,0,1,0}:
  the two-mode clustering coefficient (Opsahl, 2013)
 }
 \item{\code{0,0,2,0}:
  the unconnected clustering coefficient (Liebig & Rao, 2014)
 }
 \item{\code{3,2,2,0}:
  the completely connected clustering coefficient (Liebig & Rao, 2014)
  (\strong{not yet implemented})
 }
 \item{\code{0,0,2,1}:
  the exclusive clustering coefficient (Brunson, 2015)
 }
 \item{\code{0,0,2,2}:
  the exclusive clustering coefficient
 }
}
See Brunson (2015) for a general definition and the aforecited references for
discussions of each statistic.
}

\references{
Watts, D.J., & Strogatz, S.H. (1998). Collective dynamics of "small-world" 
networks. \emph{Nature}, 393(6684), 440--442.

Opsahl, T. (2013). Triadic closure in two-mode networks: Redefining the 
global and local clustering coefficients. \emph{Social Networks}, 35(2),
159--167. Special Issue on Advances in Two-mode Social Networks.

Liebig, J., & Rao, A. (2014). Identifying influential nodes in bipartite 
networks using the clustering coefficient. Pages 323--330 of:
\emph{Proceedings of the tenth international conference on signal-image
technology and internet-based systems}.

Brunson, J.C. (2015). Triadic analysis of affiliation networks. \emph{Network
Science}, 3(4), 480--508.
}
\seealso{
Other wedge functions: \code{\link{dynamic_wedges}}
}
