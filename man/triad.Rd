% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/triad.R
\name{triad}
\alias{triad}
\alias{make_triad}
\alias{is_triad}
\alias{triad_class}
\alias{layout_triad}
\alias{plot_triad}
\alias{an_triad}
\alias{is.triad}
\alias{triad.class}
\alias{an.triad}
\alias{layout.triad}
\alias{plotTriad}
\title{Affiliation network triads}
\usage{
make_triad(lambda, w, actor_names = c("p", "q", "r"), event_names = if
  (sum(c(lambda, w)) == 0) c() else as.character(1:sum(c(lambda, w))))

is_triad(bigraph)

triad_class(bigraph, actors = V(bigraph)[V(bigraph)$type == FALSE],
  as.partition = TRUE, format = "list")

layout_triad(triad = NULL, lambda = NULL, w = NULL, scale = 0.3,
  angdir = -1, rot = -pi/2, rot_lambda = c(0, 0, 0), rot_w = pi/12)

plot_triad(triad = NULL, lambda = NULL, w = NULL, layout = NULL,
  prettify = TRUE, cex = 1, scale = 0.3, angdir = -1, rot = -pi/2,
  rot_lambda = c(0, 0, 0), rot_w = pi/12, actor_names = c("p", "q", "r"),
  event_names = if (sum(c(lambda, w)) == 0) c() else
  as.character(1:sum(c(lambda, w))), xlim = NULL, ylim = NULL, ...)

an_triad(...)

is.triad(bigraph)

triad.class(bigraph, actors = V(bigraph)[V(bigraph)$type == FALSE],
  as.partition = TRUE, format = "list")

an.triad(...)

layout.triad(triad = NULL, lambda = NULL, w = NULL, scale = 0.3,
  angdir = -1, rot = -pi/2, rot_lambda = c(0, 0, 0), rot_w = pi/12)

plotTriad(triad = NULL, lambda = NULL, w = NULL, layout = NULL,
  prettify = TRUE, cex = 1, scale = 0.3, angdir = -1, rot = -pi/2,
  rot_lambda = c(0, 0, 0), rot_w = pi/12, actor_names = c("p", "q", "r"),
  event_names = if (sum(c(lambda, w)) == 0) c() else
  as.character(1:sum(c(lambda, w))), xlim = NULL, ylim = NULL, ...)
}
\arguments{
\item{lambda}{A non-negative integer vector of length three indicating the 
number of events attended by each pair of actors and not by the third 
(*exclusive* events).}

\item{w}{A non-negative integer indicating the number of events attended by 
all three actors (*inclusive* events).}

\item{actor_names, event_names}{Actor and event names (actor names default to 
"p", "q", and "r"; event names default to positive integers).}

\item{bigraph}{An affiliation network, in some cases must be a triad.}

\item{actors}{A vector of three actor nodes in \code{bigraph}.}

\item{as.partition}{Whether to sort the exclusive events, versus reporting 
them in order of the nodes; defaults to \code{TRUE}.}

\item{format}{Character matched to "list" or "vector"; whether to return the 
triad class as a list of \eqn{\lambda=(x,y,z)} and \eqn{w} or as a vector
of \eqn{w}, \eqn{x=\lambda_1}, \eqn{y=\lambda_2}, and \eqn{z=\lambda_3}.}

\item{triad}{An affiliation network with exactly three distinct actors.}

\item{scale}{A scaling parameter for the entire plot.}

\item{angdir}{A rotation direction parameter (\code{-1} for clockwise, 
\code{1} for counter-clockwise).}

\item{rot, rot_lambda, rot_w}{Angular orientation parameters for the entire 
triad, for the exclusive events of two actors, and for the inclusive events
of all three actors.}

\item{layout}{A two-column numeric matrix interpretable as a 
\code{\link[igraph]{layout}}.}

\item{prettify}{Logical; whether to use \code{prettify_an} to adjust the 
aesthetics of a triad before plotting it.}

\item{cex}{Node size scaling parameter.}

\item{xlim, ylim}{Custom bounds on the horizontal and vertical axes.}

\item{...}{Additional arguments passed to \code{\link[igraph]{plot.igraph}}.}
}
\description{
These functions create and operate on triads in affiliation 
  networks. In this context, a *triad* is the \code{\link{schedule}} of a 
  subset of three distinct actors.
}
